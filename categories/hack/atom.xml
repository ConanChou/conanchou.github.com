<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Hack | conan@notes:~/]]></title>
  <link href="http://ConanChou.github.com/categories/hack/atom.xml" rel="self"/>
  <link href="http://ConanChou.github.com/"/>
  <updated>2012-09-03T17:36:49-04:00</updated>
  <id>http://ConanChou.github.com/</id>
  <author>
    <name><![CDATA[Conan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[用另一臺計算機寫 Octopress]]></title>
    <link href="http://ConanChou.github.com/blog/Octopress/Hack/2012/08/23/write-octopress-in-another-box/"/>
    <updated>2012-08-23T23:26:00-04:00</updated>
    <id>http://ConanChou.github.com/blog/Octopress/Hack/2012/08/23/write-octopress-in-another-box</id>
    <content type="html"><![CDATA[<p>用 Octopress 寫博客已經有幾天了，一直都在家裏的臺機上寫。今天想在我的小黑上寫點東西的時候我就只是把 Github 上所有的 branch <code>clone</code> 下來，裝了改裝的東西，可是折騰半天不能從小黑上發佈。去 doc 里面看了一下，也没有这方面的记录。於是決定刨根。<!--more--></p>

<p>Octopress 的運行機制很簡單，就是用類似 <code>make</code> 的 <code>rake</code> 將寫好的 <code>markdown</code> 文件轉化成 HTML 文件，皮膚什麼的都也一併生成好，然後再把生成好的一堆靜態文件 <code>push</code> 到 Github 或其他類似的地方。我想不能推送的話應該是可以從 Rakefile 裏找到答案。果不其然：</p>

<p><code>ruby
mkdir deploy_dir
cd "#{deploy_dir}" do
  system "git init"
  system "echo 'My Octopress Page is coming soon &amp;hellip;' &gt; index.html"
  system "git add ."
  system "git commit -m \"Octopress init\""
  system "git branch -m gh-pages" unless branch == 'master'
  system "git remote add origin #{repo_url}"
  rakefile = IO.read(__FILE__)
  rakefile.sub!(/deploy_branch(\s*)=(\s*)(["'])[\w-]*["']/, "deploy_branch\\1=\\2\\3#{branch}\\3")
  rakefile.sub!(/deploy_default(\s*)=(\s*)(["'])[\w-]*["']/, "deploy_default\\1=\\2\\3push\\3")
  File.open(__FILE__, 'w') do |f|
    f.write rakefile
  end
end
</code></p>

<p>很顯然，這個 <code>deploy_dir</code> 也是一個單獨的 git 目錄。追溯其根源，也就是默認設置，就是 「_deploy」 目錄。而這個目錄是被 「.gitignore」 排除的。這就難怪爲什麼單純的 <code>clone</code> 沒法工作了。于是完整的 <code>clone</code> 过程如下（包含註解）：</p>

<p>``` bash
$ ;: go to the dir you want to put your octopress repo
$ cd ~/Documents</p>

<p>$ ;: clone repo from your exists octopress repo
$ git clone git@github.com:ConanChou/conanchou.github.com.git octopress
$ cd octopress</p>

<p>$ ;: get the source branch
$ git checkout -b source origin/source </p>

<p>$ ;: add original octopress repo to remote for updates
$ git remote add octopress https://github.com/imathis/octopress.git </p>

<p>$ ;: clone the master branch to _deploy dir
$ git clone git@github.com:ConanChou/conanchou.github.com.git _deploy</p>

<p>$ ;: install bundles
$ gem install bundler
$ bundle install
$ rake install
```</p>

<p>Happy hacking!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[簡單粗暴解決 Zsh Home 和 End 按鍵問題]]></title>
    <link href="http://ConanChou.github.com/blog/Linux/Unix/Zsh/Hack/2012/08/20/resolve-zsh-home-and-end-key-problem/"/>
    <updated>2012-08-20T22:21:00-04:00</updated>
    <id>http://ConanChou.github.com/blog/Linux/Unix/Zsh/Hack/2012/08/20/resolve-zsh-home-and-end-key-problem</id>
    <content type="html"><![CDATA[<p>記得剛來美國那會兒，有一次在地鐵裏聽到兩位老太太聊關於手機待機時間短的話題，當中一個老太太勸另一個老太太說去找客服「Go talk to them. Don’t settle.」這句話很大程度上概括了美國人的生活態度 —— 不妥協，有不滿就去解決。這種思想對 Hack 文化也有着潛移默化的影響，用中國人的話說便是「折騰」。<!--more--></p>

<p>半年前我加入了 <code>Zsh</code> 的用戶陣營，一番配置後倒也用着挺爽。前幾天又去折騰 <code>.zshrc</code> 文件，更爽了，可是 <kbd>Home</kbd> 和 <kbd>End</kbd> 鍵工作得不正常了，就像這樣：</p>

<p>``` bash
$ H                   <br />
git push origin source</p>

<p>```</p>

<p>按完 <kbd>Home</kbd> 鍵就在我的命令裏加了一個 H 還換行，我居然就這樣「settle」了一段時間。今天實在忍不住，找解決方案。網上的解決方案很多，也有很成熟的，比如用 <code>autoload zkbd</code>
來問答式生成按鍵和含義對應表的，可我嫌麻煩。更大部分的解決方案只是放一堆配置文件代碼，而事實上這些代碼在不同環境下是不一樣的。所以換句話說這些代碼只是治標不治本，答者沒有授問者以漁。</p>

<p>問題的本身在 <code>bindkey</code> 上。也就是說只要找到對應的按鍵和 <code>Zsh</code> 內的含義接口就可以解決問題。而含義接口就是 <code>beginning-of-line</code> 和 <code>end-of-line</code>。所以只需要找到我們的按鍵碼是什麼就可以了。下面這個小技巧可能鮮爲人知，就是利用 <code>cat</code> 來查看按鍵碼。很簡單，在命令行下直接 <code>cat</code> + <kbd>回車</kbd>，然後接着按你想知道按鍵碼的按鍵，在我的例子裏就是 <kbd>Home</kbd> 鍵：</p>

<p><code>bash
$ cat
^[OH
</code></p>

<p>接着我又得到了 <kbd>End</kbd> 鍵的按鍵碼。最後在 <code>.zshrc</code> 裏添加兩行代碼：</p>

<p><code>
bindkey "^[OH" beginning-of-line
bindkey "^[OF" end-of-line
</code></p>

<p>問題解決，簡單粗暴，但直截了當。Don’t settle. Happy hacking.</p>
]]></content>
  </entry>
  
</feed>
