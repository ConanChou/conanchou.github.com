<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: routine | conan @ notes:~/]]></title>
  <link href="http://ConanChou.github.io/categories/routine/atom.xml" rel="self"/>
  <link href="http://ConanChou.github.io/"/>
  <updated>2013-06-13T23:49:21-04:00</updated>
  <id>http://ConanChou.github.io/</id>
  <author>
    <name><![CDATA[Conan]]></name>
    <email><![CDATA[conanchou1412@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[touch log]]></title>
    <link href="http://ConanChou.github.io/blog/routine/2012/07/21/touch-log/"/>
    <updated>2012-07-21T02:05:00-04:00</updated>
    <id>http://ConanChou.github.io/blog/routine/2012/07/21/touch-log</id>
    <content type="html"><![CDATA[<p>大半年前就在 HN 上看到一篇文章说 <a href="http://tom.preston-werner.com/2008/11/17/blogging-like-a-hacker.html">像黑客一样写博客</a> 的文章。看到标题的时候，我还以为肯定是一篇无聊的炫耀文。可是我错了。文章是 GitHub 的联合创始人 Tom Preston-Werner 写的。他在文中推荐了一种新的写作博客的方式。其实说穿了就是拿 Ruby 世界的 <code>make</code>，<code>rake</code> 来生成基于 markdown 的静态网页，然后将这些网页再部署到 GitHub。</p>

<!-- more -->

<p>这看似有点吃饱了撑着，但是仔细想想，确实有不少好处。首先，这样的方案是完全免费的。其次，虽然免费，但不代表 QoS 就差，事实上正好相反。相比较 WordPress 这样的博客平台，它对服务器的要求更低、反应更快。不奇怪嘛，它是纯静态的。再来，写的文稿可以在 Git 中得到版本控制。你不再受网络、环境的影响。想什么时候写就什么写，想在哪里写就在哪里写，因为 Git
是分布式的。这让写作变得随心所欲。还有就是书写形式是用 markdown，简单快捷。不过据说如果文章变多的时候编译时间会很长。但对于程序员来说这应该是可以忍受的。我们经常遇到一编译就是小半天的情况不是吗。</p>

<p>当时看完后就想换博客。可是那会儿有些忙、加之我还是花钱买的服务器，不用多亏啊，于是就没行动。之后有些空的时候，我便架起来一个，迟迟没有写。毕竟还在用着现在的那个 <a href="http://conanblog.me">conanblog.me</a>。后来的今天，或者说最近的这个礼拜，特别想写一些技术相关记录性的文档。而之前在 <a href="https://github.com/ConanChou/Unix-as-IDE--Chinese-">Unix as IDE Chinese</a> 项目的时候就有非常好的用 markdown 以及 Git
处理文案的经历，就特别想继续这样的方式。于是决定将来凡是技术相关的文章就在<a href="http://conanchou.github.com">本站</a>写，旧博客会使用到服务器到期。到期之前我会最终把文章备份被转移到这边。</p>

<p>在配置里写描述时，我是写的“Open Source, Computer Science, Linux, Unix, Hack, Programming, Math, Python, Ruby, Lisp”。我没有放 Life，其实也是希望自己能够更多地专注于写有质量的文章。希望能够做到。</p>

<p><code>
conan@notes:~/ touch log
</code></p>
]]></content>
  </entry>
  
</feed>
