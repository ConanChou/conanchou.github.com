<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="//www.w3.org/2005/Atom">

  <title><![CDATA[Category: thought | conan @ notes:~/]]></title>
  <link href="https://conanblog.me/categories/thought/atom.xml" rel="self"/>
  <link href="https://conanblog.me/"/>
  <updated>2016-02-20T16:52:14-05:00</updated>
  <id>https://conanblog.me/</id>
  <author>
    <name><![CDATA[Conan]]></name>
    <email><![CDATA[conanchou1412@gmail.com]]></email>
  </author>
  <generator uri="//octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[談民科]]></title>
    <link href="https://conanblog.me/blog/thought/2016/02/20/crank-and-autodidacticism/"/>
    <updated>2016-02-20T11:54:51-05:00</updated>
    <id>https://conanblog.me/blog/thought/2016/02/20/crank-and-autodidacticism</id>
    <content type="html"><![CDATA[<p>近幾年「民科」這個詞的曝光度越來越大，有關的言論也是越來越多。兩件事情讓我最近一段時間一直思考關於「民科」的事兒。一是王垠寫了篇幫 Java 洗白的博客，雖然很多觀點我是讚同的，但依然不敢同意他的種種論調，尤其是他文章中出現了三次民科，而且對其嗤之以鼻。於是我就想起了第二件事，我也曾被一個 PhD 在讀生室友扣過民科的帽子，因為我曾經天真地認為某兩種植物屬於同一科。而今天就在寫這篇文章之前，正巧有個群也聊了相關的話題。所以打算寫下我的一些想法。</p>

<!--more-->

<p>首先要解決我腦子里一直存在的一個困惑：怎麼定義民科？</p>

<p>綜合<a href="https://zh.wikipedia.org/wiki/民间科学家">維基百科</a>和跟朋友們的討論，我覺得民科大致需要符合以下幾個特征：</p>

<ol>
  <li>极少接受过（甚至拒绝）正规科技学习及训练</li>
  <li>理论知识及学术素养匮乏</li>
  <li>热衷于相关领域研究</li>
  <li>製造已經解決某些重大問題的因特網言論，炒作多過學術</li>
</ol>

<p>然而令我困惑的是，我之前提到的王垠和那位 PhD 在讀生也常把民科掛嘴邊，可似乎他們說的民科跟這個定義似乎有些不一樣。似乎他們指的更多的是「那些非科班出身的人，且正好有錯誤或不被他們認同的觀點」。所以這範圍一下就被擴大了，而事實上很多網民也確實在用這種擴大化的定義 。</p>

<p>我的那個例子連我自己都不會用「科學」來形容，純屬猜測，也不怪被人恥笑。而王垠說的這些人牽強地說還是有些符合上面歸納的四點的，我一開始這麼想。可後來覺得這經不起推敲，畢竟計算機科學跟其他自然科學還是有區別，我在舊博客里也寫到過，我稱之為人造科學。所以第一個特征並不符合。而第四點其實也是很主觀的。</p>

<p>今天受到前輩點撥，或許這一群很容易被歸類為「民科」的人應該被歸類到<a href="https://zh.wikipedia.org/wiki/自主學習">「自主學習主義」</a>。這樣的一個群體其實是非常尷尬的群體，因為自己研究研究也就算了，可有了新發現還不能說，說了就會被貼標籤扣帽子。而且這帽子扣得還是因人而異，有些人因為其名望高，所以世人就跪舔，而有些人出生草根就被恥笑。想想 <a href="https://en.wikipedia.org/wiki/Srinivasa_Ramanujan">Srinivasa Ramanujan</a>，我們應當反省自己的言行。你可能會說這也只是特例而已，這種人滿民科界（實指自主學習者）又能找到幾個，那我來說兩個小故事。</p>

<p>第一個是關於海森堡的<a href="https://zh.wikipedia.org/wiki/不确定性原理">不確定原理</a>，有人質疑它的正確性。於是就做了個假想實驗，說假設有這麼個盒子，盒子上有個帶快門的小孔，箱子里有若干光子。再假設這個快門足夠快可以一次只放跑一個光子，$\Delta {t}$ 足夠小，而少了一個光子也可以用理想的秤稱量 $\Delta {m}$，這麼一來那個光子的質量也就是 $m$，再根據質能方程 $E=mc^2$，可以輕鬆得到 $\Delta {E}$。這麼一來海森堡的不確定原理公式 $\Delta {E} \times \Delta {t} &gt; h/2\pi$ 就不成立了。</p>

<p>第二個證明是關於超光速的。還是一個假想實驗，如果假設能製造一根長達一光年的棍子，A和B站在棍子兩端，A用棍子戳B一下，動能的傳遞能在瞬間完成，這就自然實現了超光速。</p>

<p>這倆都有問題你們看出來了嗎？</p>

<p>第一個的話，如何稱量 $\Delta {m}$呢，拿個彈簧秤好了，設置一個零點，然後看箱子位移多少。那假設位移是 $\Delta {q}$，這樣箱子就在引力場里移動了 $\Delta {q}$。但根據廣義相對論的紅移效應，時間的快慢也會相應改變 $\Delta {T}$。再根據公式最後還是能推導出 $\Delta {T} \Delta {E} &gt; h$。這反而再次證明了理論的正確性。</p>

<p>而第二個這個實驗的假設也得重新思考。理想的剛體並不存在，棍子會縣收縮再伸展，動能在棍子內部只能以機械波的速度傳遞，從而低於光速。</p>

<p>這兩個雖然第二個看起來更小兒科一點，但其實其錯誤是很相似的。在今天，可能很多人都會把他們叫做民科。只是剛剛說的第一個故事是發生在1930年第六屆索爾維會議，而這個假想實驗正是著名的<a href="https://en.wikipedia.org/wiki/Bohr–Einstein_debates">愛因斯坦光盒實驗</a>。通過這兩個故事我其實是想說，拋開人物、標籤，故事是一樣的，不一樣的只是自己。</p>

<p>忽然我就想起了 Paul Graham 的那篇<a href="http://www.douban.com/note/344097029/">《不能說的話》</a> (<em><a href="http://www.paulgraham.com/say.html">What you can’t say</a></em>)，雖然歷史在一遍遍重演，這幾乎是一種自然規律，但我還是不禁感歎，這樣的現象是多麼可悲的事情。我認為對待言論要動腦思考敞開胸懷，不要傲慢不要偏見，即便是小眾論調也要公平對待，更加不要因為別人的出生或經歷而妄下斷言。對於異議不要動輒就是貼標籤，相反你應該嘗試駁倒對方，更不要因為自己的傲慢與偏見來給別人貼標籤。時不時地逆潮流思考也是有好處的，內省的思辨往往能讓我們保持清醒。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一些關於假新聞和標題黨的想法]]></title>
    <link href="https://conanblog.me/blog/china/internet/thought/2016/01/03/we-media-fake-news/"/>
    <updated>2016-01-03T11:03:16-05:00</updated>
    <id>https://conanblog.me/blog/china/internet/thought/2016/01/03/we-media-fake-news</id>
    <content type="html"><![CDATA[<p>最近又有一些自媒體的假新聞被忽然炒熱，比如最近一篇說蘋果收購特斯拉的。不管是愚人節假新聞被挖墳，
還是挖墳、傳播者無腦。假新聞、標題黨這兩年已經泛濫，自媒體更是搞臭了自己的名聲。
表面看，這事兒一半關於內容制造者的人品，另一半關於讀者和傳播者素質，我相信 Fenng 的<a href="http://mp.weixin.qq.com/s?__biz=MjM5ODIyMTE0MA==&amp;mid=401811966&amp;idx=1&amp;sn=76a53dbe421dcba15e923ce79d832eb0&amp;scene=5&amp;srcid=01032MbUPhPM67o8GPanOOSd#rd">這篇文章</a>已經做了很“給力”的討論。</p>

<p>前不久我也在 Twitter 上跟幾個推友討論了相關話題。</p>

<p><img src="/images/20160103/twitter.png" alt="為保護推友隱私，已經把推號和頭像遮掉" /></p>

<!--more-->

<p>我這篇推文雖然得到了很多人的贊同，然而我覺得這並不是問題的全貌和根本。那根本是什麼？我覺得是誠信缺失。
你可能覺得這豈不是廢話，可是我想說的不僅僅是造假自媒體和惡意傳播者的誠信缺失，更是社會誠信缺失的問題。</p>

<p>在進入到分析之前我想先分享一下誠信較高的社會裡自媒體是如何生存的。拿 Medium 來說吧，
它是目前運營得最成功的博客平台之一。他們公司也很早就開始想如何犒勞寫手/作家。
按照點擊量付正相關的酬勞似乎合情合理，畢竟他們是互聯網公司，流量和用戶數就能直接和間接
給他們帶來經濟利益。
不過他們第一個槍斃了這個想法，因為這種模式極有可能讓人們忽視真正高質量的文章。
所以是毋庸置疑的情懷牌，當然不光文章質量有情懷，整個網站的 UI/UX 也是處處體現情懷。
這裡就不多說了，感興趣的同學可以自己去仔細體驗。</p>

<p>而發文的那些專業與非專業的作者們對 Medium 的態度呢？大多數人覺得 Medium 是一個提高知名度的平台，
他們用它來 <strong>建立</strong> 自己的公眾形像和聲譽，最終從這些知名度和公眾形像中，他們能獲得一定的經濟利益。
當然 Medium 也會給一些明星作家一定的報酬，而我覺得這也是建立在之前這些明星作家們的 <strong>積累</strong> 之上。
而其它類似的自媒體平台也是大同小異。</p>

<p>Surround your pullquote like this {&#8221; text to be quoted &#8220;}</p>

<p>那再來看看在華人社會比較流行的這些自媒體平台。朋友圈、微博、以及類似 Medium 的平台簡書。
他們有一個共同點。這也多虧了老羅的發布會我才意識到。就是“打賞”這個功能。我並不是不喜歡這個功能，
事實上我自己也做過產品，換我我也會加同樣的功能。
之所以加這個功能，說明產品經理們已經意識到了某種更深層的脈動。順便插一句，
在寫這篇文章做調查時我也發現了一些美國的創業公司試圖給 Medium 添加類似“打賞”的功能，可是最終都
因響應不強烈，不了了之了。</p>

<p>接著說回這個打賞的事兒。華人相對來說不喜歡分享，“自掃門前雪”、“肥水不流外人田”、
“多一事不如少一事”、“槍打出頭鳥”等思想已經深深影響著我們的行為。
而對於大多數中國網民來說，生活雖不到艱難的地步，但也沒有閑到天天有時間寫文章。
尤其是一些中產，有思想有知識，但是沒時間做沒有報酬的“閑事”。
所以產品經理們為了換得更多的質量相對高的內容（從而得到更多用戶和流量），
他們要把“閑事”變成“稍正的事”。</p>

<p>情懷牌在這個時候就不管用了，表面上，作家/寫手要養家糊口、或賺點外快。
實際上，想想之前我說的行為和經濟利益的關系，
在誠信相對缺失的社會，寫作這種行為和經濟利益如果還是間接關系，還有多少人買賬？
必須要直接，而且要赤裸裸地直接，要有視覺和數字的直觀衝擊。</p>

<p>那誠信在這兒起什麼作用？誠信是現金的緩衝帶，越沒有信任就越是要“一手交錢一手交貨”，
越有信任就越可以“賒賬”。可誠信這東西怎麼來呢？靠 <strong>積累</strong>。
人都是社會動物，不可避免地會相互模仿，
當“積累”這種“吃力不討好”的方式在一個社會裡被一些不誠信的“抄近路”的方式打敗時，
人們自然會學習“抄近路”，直到人們發現“抄近路”的弊端大於利益時才會罷休。這不可避免，即便是現在已經
很誠信的社會在早期也面臨過這樣的歷史進程。</p>

<p>Surround your pullquote like this {&#8221; text to be quoted &#8220;}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2015->2016]]></title>
    <link href="https://conanblog.me/blog/life/thought/2015/12/31/2015-2016/"/>
    <updated>2015-12-31T13:53:55-05:00</updated>
    <id>https://conanblog.me/blog/life/thought/2015/12/31/2015-2016</id>
    <content type="html"><![CDATA[<p><img src="/images/20151231/hpny.jpg" alt="" /></p>

<p>又是一年忙忙碌碌，可能光從這兩年的博客發表數量就可以看出來。今年跨年，是該稍微寫一點東西了，
免得以後忘記這兩年都幹了些啥。</p>

<!--more-->

<h2 id="section">工作</h2>

<p>2013 年中，我加入了一家為金融公司做私有雲的創業公司。開始的一年多做得非常開心。
因為做的東西很有挑戰，我到現在還記得加入的第二天就接到了一個獨立任務──寫一個 in-memory
graph database，而且不能太臃腫，因為要放進 OpenVSwitch 交換機里跑。之後幹了半個禮拜，
在我離開這家公司時，這個項目依然還在我們數據中心的每一台交換機里運行著。當然其實後來整個
OpenVSwitch 的軟件框架基本都是我寫的。
這也是那一年半里我每天工作的重心。在這個過程中，我的搭檔──一名網絡工程專家，
以及我的上司──一名總是比我多想一步的實時高頻系統專家，都給予了很多的鼓勵和幫助，
不論是硬技術方面的還是軟技術方面的。之後，有了一些人事方面的變動，我老闆跳槽了，
於是我便慢慢變成了個自由人，我也越來越多地涉及到公司產品的其它部份，
尤其是數據庫和數據中心方面的項目。好的不好的事、物都經歷過，這些都是寶貴的經驗。
在我離開的時候，公司好幾個組的夥伴都來跟我說願做我的推薦人，這就讓我很感動。
這種肯定是為我踐行的最好的禮物。</p>

<p>2015 年中，我決定跳槽了。過去的兩年，我成長了，公司也成長了，它再也不是一家創業公司；然而我還是
喜歡創業公司。一次機緣巧合的機會，我去哥大參加一個清華北美地區校友會組織的座談會（應該是我人生
中最接近清華的一次吧，哈哈），結識了一位同是嘉賓的哥大教授。那會兒他剛剛和他的一個博士學生建立了一
個有學術背景的創業公司。當中略過幾次吃飯聊天，大半年之後我便加入了他的公司。現在我剛剛加入這家
公司一個多月吧，它還跟小嬰兒似的，還有很多待做的事情，從架構到功能，從 UI/UX 到代碼。
當然這一切都得建立在團隊對我的信任上。我相信這只是個時間問題。希望 2016 年我能幫助它成長得更好。</p>

<h2 id="section-1">生活</h2>

<p>2014 年初的時候，我邂逅了她，我現在的妻子。她很美，也比我聰明。在我眼裡她無限接近于完美。
我經常偷樂，沒想到我這德行還能追到這麼好的姑娘。在她的細心照料下，我的生活有了質的飛越，
身上的毛病也少了。我很感謝她，在迷茫的時候她幫我解惑，她的支持給我繼續執行的勇氣，
另外她還容忍我玩電子音樂、夢話說程序語言設計，還耐心聽我嘮叨那些偏門冷知識。
來年我依然會努力照顧好她，不給她惹麻煩 ;)</p>

<p>去年回了一次國，時間上也是匆匆忙忙，并沒有來得及見朋友。父母和祖輩都去看望過。都還好，
只是許久不見，他們都老了。我爸雖然還壯實，但是跟我記憶里的樣子已經不一樣了。
忍不住就想起朱自清的《背影》。想到就心疼和無奈。剛認識我老婆那會兒，她問我可有我爸媽的照片，
我那時才意識到我沒有我爸的照片，這麼多年我腦子里還是那個開車送我上學時的他。我爸還不會視頻聊天，
所以這些年一直都是我打網絡電話給他，可是每次都是匆匆幾句話。近幾年，歲月改變了他，想來開始
掛念孩子家人了，才多了幾通十幾分鐘的電話。最近我媽那邊傳來消息，說是外公快不行了，六七年了，
她一個人照料得了癌症的外公。也是非常不容易。想想要不是你們的辛苦，我哪裡有這般無憂的生活？
希望未來我能常回家看看吧。</p>

<p>對了，我要減肥了，BMI逼近正常和肥胖的那條交界線了。</p>

<h2 id="section-2">學習</h2>

<p><img class="left" src="/images/20151231/2016resolution.png" width="200" height="265" title="2016 Resolution" ></p>

<p>這幾年學習倒是沒斷過，工作必須要學的和自己感興趣的。這一點還算欣慰。2015 年初我在 GoodReads
上定下一年 30 本書的挑戰，年末看看自己才差不多完成了一半。不過沒完成挑戰倒沒什麼要緊的，
想想我讀的書畢竟不是暢銷小說，知識密度大多了。
其實左邊這幅圖片的背景就是我今年翻閱過的書籍的一部份。</p>

<p>今年還在 coursera 上上了一些伯克利音樂學院的課，深受啟發。我又看到來年有一些新課，找個時間還是
會再去上一上。</p>

<p>學習方面繼續保持吧。現在唯一覺得時間不太夠用，之後等生活進一步穩定下來應該會有更多時間吧。</p>

<h2 id="section-3">創業</h2>

<p>創業的夢一直在做，想法也一直有，也經常和朋友們分享。再積累幾年，我會再回來的。
今年國內的資本市場也是動盪的一年。一旦錯過一個好窗口，就有可能錯過整片江山。
我曾投資的一家公司就遇到了不小的麻煩。不管怎樣，兄弟繼續加油！</p>

<h2 id="section-4">2015-&gt;2016</h2>

<p>就這樣吧，一篇沒什麼營養的總結，寫在 2015 的最後一天。對來年我也沒什麼高大上的願景，
踏踏實實做好眼前事兒吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[不是格子人生]]></title>
    <link href="https://conanblog.me/blog/life/thought/2015/07/20/to-do-or-not-to-do/"/>
    <updated>2015-07-20T12:08:48-04:00</updated>
    <id>https://conanblog.me/blog/life/thought/2015/07/20/to-do-or-not-to-do</id>
    <content type="html"><![CDATA[<p><img src="https://conanblog.me/images/20150720/zen.jpeg" alt="" /></p>

<p>距離上次的更新又是很久了。這個一年多來換了三處地方住，各種各樣的事情接踵而至，工作也從一個項目
變成了四個項目。說真的一直扛著重壓走了很久。不過好就好在，我遇到了我的女朋友。事情沒有太糟糕。</p>

<p><a href="https://conanblog.me/blog/life/hack/productivity/2014/09/01/900-months/">之前的一次更新</a>
我寫了一些關於 GTD 的想法，以及一個私人的項目。隨著時間的推移，我是一直在努力讓自己跟上時間的步伐，
然而事情並沒有非常順利。經過很長時間的努力但如果還是不見成效的話，往往說明了也許我們看/解決問題的
方法有問題。於是就有了這篇隨想/分享。</p>

<!--more-->

<p>讓我決定寫下我的想法的其實是 Jeff Atwood 的 <a href="http://blog.codinghorror.com/todont/"><em>Todon’t</em></a>，
我在讀他的博客文集
<a href="http://www.amazon.com/How-Stop-Sucking-Awesome-Instead-ebook/dp/B00BU3KPQU"><em>How to Stop Sucking and Be Awesome Instead</em></a>
的時候遇到了這篇文章。（題外話，這本書並沒有書名顯得那麽沒營養，其實是很有料的一本書。）</p>

<p>請允許我引用文中的一句話，因為它同樣也是我心中的聲音：</p>

<blockquote>
  <p>If you can’t wake up every day and, using your 100% original equipment God-given organic brain, come up with the three most important things you need to do that day – then you should seriously work on fixing that.</p>
</blockquote>

<p>可能跟大多數使用 GTD 工具的人一樣，我有一個鼠標滾輪滾好多下都不見底的 TODO list。它讓罪惡感在我心裏
慢慢堆積，進而升級變成了壓力。當然這只是加之我身的一部份壓力的具象化。在我之後要提到的一本書里就提到，
我們的壓力來自多方面，比較常見的有：</p>

<ul>
  <li>Traffic stress</li>
  <li>Getting angry</li>
  <li>Interpersonal conflicts</li>
  <li>Frustration over failed weight loss efforts</li>
  <li>Financial stress</li>
  <li>Being overwhelmed with too much to do</li>
  <li>Having regrets</li>
  <li>Discrimination</li>
</ul>

<p>我比對了一下，只能默默在每一項前面打勾……
我一開始覺得可能用一個 TODO list 來記錄並優先排序，然後按照自己的時間
安排來處理這些事務是可以解決這些事情的。可事實告訴我：然並卵。這個“系統”看似完美，可是就跟安全界的
一句名言說得一樣：</p>

<blockquote>
  <p>任何系統里，人總是軟肋</p>
</blockquote>

<p>在這種 TODO 系統裏也是一樣。我成了系統的瓶頸。我有自動腳本幫我篩選新聞、
放進我的 Pocket 服務、並在 TODO 裏創建新項目；我也用 IFTTT 將很多東西自動化。
可是這些最終只是將我的 TODO list 加長。而我只能慢慢地一個一個完成。</p>

<p>在重壓下，我得尋找出路，於是找到了這本書 <a href="http://www.amazon.com/The-Myth-Stress-Happier-Healthier/dp/1439159459"><em>The Myth of Stress</em></a>。
或許在讀書之前我就這麽想，但是似乎在讀完之後我更加篤定：</p>

<blockquote>
  <p>我們承受如此大的壓力，根源並不是這個世界變得糟糕了，真正需要改變的是我們自己</p>
</blockquote>

<p>其實就跟我在大學期間對待考試一樣的態度——平常心。只是進入工作，面對異鄉人的特殊身份、財政、感情、
工作、創業、學習、雜務，我漸漸忘記當年的口頭禪“平常心”。之前我也曾讀到一篇很有意思的文章，表面看起來是說
如何準備自殺，其實是勸好好面對人生的。當中作者就指出一個很關鍵的點：人在面臨大災難的時候往往非常
堅強，反倒是那些瑣事會讓人萌生自殺的念頭。</p>

<p>這才回到了我開頭所引用的觀點，平常心對待日常事務，不要再給自己什麽 TODO List 了。錯過一個事務
也不會怎樣，真正關鍵的、非做不可的事情肯定不會錯過。不管是以哪種方式“不錯過”，要麽是重要到你忘不了
的事情，要麽是有第二次、第三次機會的事。</p>

<p>其實在 <em>The Myth of Stress</em> 和另一本有關壓力的書 <a href="http://www.amazon.com/The-Upside-Stress-Why-Good/dp/1583335617"><em>The Upside of Stress</em></a> 里，
都提到了一個不容忽視的一點：壓力不可避免，適當的壓力能讓你做得更好。</p>

<p>所以經過一段時間的思考和沉澱，我廢除了 GTD 以及相關的 GTD 項目，只用大腦記錄要務。因為工作後雜務太多，
學習變成了一件困難的事情，所以仍然需要對學習給予一定的壓力，比如我給自己設定一個今年閱讀 30 本書的目標。</p>

<p>900 個月的人生，轉瞬即逝，我們為何要選擇不愉快的方式去度過呢？別給自己畫上格子，這不是格子人生。</p>

<p><small>說明：封面圖片我也不知道版權屬誰，是從這裡拿到的：<a href="https://theabysmal.wordpress.com/tag/zen-mind-beginners-mind/">the Abysmal Centre</a>。
暫時先用了，如有問題請聯繫我，我會徹下。</small></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[勤與懶]]></title>
    <link href="https://conanblog.me/blog/thought/2013/06/09/just-in-case-vs-just-in-time/"/>
    <updated>2013-06-09T22:02:00-04:00</updated>
    <id>https://conanblog.me/blog/thought/2013/06/09/just-in-case-vs-just-in-time</id>
    <content type="html"><![CDATA[<p>「Just In Case」和「Just In Time」，前者是「以防萬一」，而後者是「正好及時」。寫這篇日誌不是爲了給大家解釋這兩個詞組的字面意思，我更想談一談它們字面意思以下的含義，以及它們在程序設計中的意義。</p>

<p>初看之下，這兩個詞組只是長得很像，似乎並沒有什麼聯繫。而事實上我覺得它們間是一種反義的聯繫。「Just In Case」的做法是在處理問題時把所有可預料的情況處理放在前面處理；「Just In Time」則相對應，總是只處理當前需要處理的問題，處理是放在當下的。所以打個形象的比喻就是前者是勤勤懇懇的人，而後者是懶惰精明的人。<!--more--></p>

<p>看到這裏，或許你會認爲前者是好的，後者是壞的。但是這也正是我想澄清的，它們並沒有好壞之分，應該說它們各有各的優勢也各有各的劣勢。此話怎講？我們來用我們學過的知識來打個比方好了。曾经我和很多人一样都有一种困惑，或者说失落感，因为大学本科课程太浅，觉得学得泛而浅；而真正开始工作了又要开始学各种更加深入而专项的知识。为什么不在本科就学呢？其实这样的教育体系是有它存在的意义的。泛而浅的知识是必要的，因为如果你从未开始探索某一领域的知识的话，在将来如果要用到的时候就很难往这一领域的知识想。比如《数学之美》的作者吴军博士就曾经是学信号处理的，而这些知识恰好在他后来的信息和语音处理领域可以得到应用。如果他之前学的，比方说，会计學，他或许最终会用一样的知识体系去解决问题，但很显然，他很有可能得走更多的弯路。所以这些在本科学到的泛而浅的知识其实就是「Just
In Case」的知识。相對應的，那些到了工作中学到的专项深入的知识大多是「Just In Time」的知识。这两种不同类型的知识我們都需要，自然可以看出 JIC 和 JIT 是各有千秋的了。</p>

<p>現在我們再把這兩個概念放到編程語言和程序設計這裏領域來說說吧。可能對編譯有所瞭解的同學會一眼認出JIT，那是一種編譯方式沒錯，不過我想說的是一個更廣一點的概念，就是「lazy」。lazy 是計算機科學裏一個處理問題的策略，說白了就是讓程序避免執行不必要的指令，從而達到提升效能的目的。lazy 這個詞跟我們平時生活中用來形容人的用法其實是一樣的，只是這裏我們似乎因爲它帶來了額外的利益，反而對 lazy
跪舔了。（再次表現出了人類的醜陋本性，嫉妒別人能夠省事，同時又無節操地喜歡對自己有利的東西。）那在程序世界裏跟 JIT 相對的概念跑哪兒去了？其實我們平時正常的、無 laziness 的編程方式就是跟 JIT 相對的編程方式了。</p>

<p>這時候可能有人會覺得，既然 lazy 式的編程方式可以幫我們節省資源，我們爲什麼不全都用這種方式？這就引出了我想說的，不同應用場景這兩種編程風格的利弊了。lazy 也不是徹底的好東西。我們拿分佈式計算裏的一個案例來舉例，Hadoop（MapReduce），如果全都採用 lazy 式的設計方案，那很有可能有些數據就總不會被算，直到被需要的那一刻，這帶來的後果就是本來能夠並行分佈式運算的，但卻因爲
lazy 變成了低效的半並行半流水線的分佈式運算。</p>

<p>聊完了編程，我們來聊聊人生好了。其實「勤奮」與「懶惰」，還真的是個哲學問題呢。有人看起來勤奮，但其實他懶惰；有人看起來懶惰，但其實他勤奮。第一類人，我們通常會用「庸庸碌碌」來形容他，而第二類人更像是「精明能幹」的。第一類人不想走出自己的 confident
zone，所以即便知道自己在做的是重複勞動，他也會「勤勤懇懇」地做下去，「懶」到不願去想有沒有更好的辦法。第二類人合理地避開不需要處理的事物，創造性地產生出可以取代現有方案的新方案，他們可能看起來做的事情並不多，但其實「勤」于思考。</p>
]]></content>
  </entry>
  
</feed>
